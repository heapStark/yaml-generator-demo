swagger: "2.0"
info:
  title: JCLOUD test API
  description: API related to test
basePath: /renewal3
paths:
  "/postQuery/{serviceCode}":
    post:
      operationId: postQuery
      parameters:
        - name: filters
          in: query
          type: array
          items:
            $ref: "../../common/model/Filter.yaml#/definitions/filter"
        - name: pageNumber
          in: query
          type: integer
          required: false
        - name: pageSize
          in: query
          type: integer
          required: true
        - name: serviceTerm
          in: body
          schema:
            $ref: "../model/ServiceTerm.yaml#/definitions/serviceTerm"
        - name: hello
          in: query
          type: string
          required: false
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                $ref: "../model/ServiceTermResult.yaml#/definitions/serviceTermResult"
              requestId:
                type: string
        404:
          description: NOT_FOUND
  "/queryServiceTerm/{serviceCode}":
    patch:
      operationId: queryServiceTerm
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                $ref: "../model/ServiceTermResult.yaml#/definitions/serviceTermResult"
              requestId:
                type: string
        404:
          description: NOT_FOUND
  "/queryServiceTerm/{serviceCode}":
    put:
      operationId: queryServiceTerm
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                $ref: "../model/ServiceTermResult.yaml#/definitions/serviceTermResult"
              requestId:
                type: string
        404:
          description: NOT_FOUND
  "/queryServiceTerm/{serviceCode}":
    delete:
      operationId: queryServiceTerm
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                $ref: "../model/ServiceTermResult.yaml#/definitions/serviceTermResult"
              requestId:
                type: string
        404:
          description: NOT_FOUND
  "/query/{serviceCode}:delete":
    get:
      operationId: querydelete
      parameters:
        - name: filters
          in: query
          type: array
          items:
            $ref: "../../common/model/Filter.yaml#/definitions/filter"
        - name: pageNumber
          in: query
          type: integer
          required: false
        - name: pageSize
          in: query
          type: integer
          required: true
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                $ref: "../model/ServiceTermResult.yaml#/definitions/serviceTermResult"
              requestId:
                type: string
        404:
          description: NOT_FOUND
  "/queryServiceTerm/{serviceCode}":
    get:
      operationId: queryServiceTerm
      parameters:
        - name: hello
          in: query
          type: string
          required: false
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                $ref: "../model/ServiceTermResult.yaml#/definitions/serviceTermResult"
              requestId:
                type: string
        404:
          description: NOT_FOUND
  "/queryServiceTerm/{serviceCode}":
    patch:
      operationId: queryServiceTerm
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                $ref: "../model/ServiceTerm.yaml#/definitions/serviceTerm"
              requestId:
                type: string
        404:
          description: NOT_FOUND
parameters:
  serviceCode:
    name: serviceCode
    in: path
    required: true
    type: string
